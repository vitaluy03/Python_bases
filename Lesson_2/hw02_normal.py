# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]

import math
lst = [2, -5, 8, 9, -25, 25, 4, 4.6, 88.8, 90, 625.625, 64, 77.44]
lst1 = []
for i in lst:
 if i > 0 and (math.sqrt(i)) % 1 == 0:
     lst1.append(int(math.sqrt(i)))
print(lst1)


# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)

 #пример с ограниченными словарями
date = input('введите введите дату в формате dd.mm.yyyy')
new_date = (date.split('.'))
day = {'01': 'first', '02': 'second', '03': 'firhd'}
month = {'01': 'junuary', '02': 'february', '03': 'martch'}
print('Start time {} {} {} yaers.'.format(day[new_date[0]], (month[new_date[1]]), new_date[2]))

# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random

import random
quantity = int (input('Введите количество элементов: '))
list = []
n = 0
while n < quantity:
    list.append(random.randint(-100, 100))
    n += 1
print(list)



# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут:
# а) уникальные элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]


lst3 = [1, 2, 3, 4, 5, 1, 3, 5, 7, 8, 9]  # вариант а
lst4 = []
for i in lst3:
    if  i not in lst4:
        lst4.append(i)
    else: continue
print(lst4)

# вариант б не решен
#Перебирайте в цикле и считайте количество каждого элемента
#если количество повторений элемента = 1, то это наш клиент)









